plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.11.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation "com.squareup.okhttp3:mockwebserver:4.11.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1"

    testImplementation "com.squareup.retrofit2:retrofit:2.9.0"
    testImplementation "com.squareup.retrofit2:converter-scalars:2.9.0"
    testImplementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    //ktor
    def ktor_version = "2.3.1"
    testImplementation "io.ktor:ktor-client-core:$ktor_version"
    testImplementation "io.ktor:ktor-client-cio:$ktor_version"
    testImplementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    testImplementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.denisbrandi.netmock'
            artifactId = 'netmock-okhttp'
            version = '0.1'

            from components.java
        }
    }
}